import java.security.MessageDigest;

public class Fourdigitpin 
{
    public static void main(String[] args) throws Exception
    {
    	long startTime, endTime, totalTime;
    	MessageDigest md = MessageDigest.getInstance("SHA-1");
    	String password = "";
    	String hash = "";
    	boolean hashFound = false;
    	
    	String finalhash = "AA7D9F7DAA92CF05E5D4814CF216B31DD8E00E683F";
    	
    	startTime = System.currentTimeMillis( );
    	
    	for(int i = 0; i < 10000; i++) {
    		password = "Zz" + String.format("%04d", i);
    		//System.out.println(password);
    		md.update(password.getBytes());
    		 
            byte byteData[] = md.digest();
     
            //convert the byte to hex format method 1
            StringBuffer sb = new StringBuffer();
            for (int j = 0; j < byteData.length; j++) {
            	sb.append(Integer.toString((byteData[j] & 0xff) + 0x100, 16).substring(1));
            }
            
            hash = sb.toString().toUpperCase();
            //System.out.println(hash);
            //System.out.println(hash.length());
            if(hash.contains("7D9F7DAA92CF05E5D4814CF216B31DD8E00E683F")) {
            	//hashFound = true;
            	System.out.println("digit: " + password + " hash: " + hash);
            	//break;
            }
    	}
    	
        endTime = System.currentTimeMillis( );
        
        totalTime = endTime - startTime;
        if(hashFound) {
        	System.out.println("digit: " + password + " Hash: " + hash);
            System.out.println(totalTime);
        } else {
        	//System.out.println(hash);
        	System.out.println("No matches found");
        }
    }
}